name: Build and Push Docker Image

on:
  push:
    branches: [main]
  pull_request:
    types: [labeled]
  workflow_dispatch:

jobs:
  build:
    name: Build and Push Docker Image
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action == 'labeled' && contains(github.event.label.name, 'docker-build'))
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Extract build info
      id: extract_build_info
      run: |
        echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
        echo "commit_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          smoldot/smoldb
          ghcr.io/kshivendu/smoldb
        tags: |
          type=raw,value=${{ steps.extract_build_info.outputs.tag }}
          ${{ github.ref_name == 'main' && 'type=raw,value=latest' || '' }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        sbom: true
        provenance: true
        platforms: linux/amd64,linux/arm64
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
        build-args: |
          VERSION=${{ steps.extract_build_info.outputs.tag }}
          BUILD=${{ steps.extract_build_info.outputs.commit_short }}
