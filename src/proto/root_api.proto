syntax = "proto3";

package smoldb_p2p_grpc;

import "google/protobuf/empty.proto";

// Simple service:

service Service {
  // Returns the title and version of the service - useful for debugging
  rpc RootApi (RootApiRequest) returns (RootApiReply) {}
}

message RootApiRequest {}

message RootApiReply {
  string title = 1;
  string version = 2;
}

// Raft service:

service Raft {
  // Send Raft message to this peer
  rpc Send (RaftMessage) returns (google.protobuf.Empty);
  // Send to bootstrap peer
  // Returns uri by id if bootstrap knows this peer
  rpc WhoIs (PeerId) returns (Uri);
  // Send to bootstrap peer
  // Proposes to add this peer as participant of consensus
  // Returns all peers
  rpc AddPeerToKnown (AddPeerToKnownMessage) returns (AllPeers);
}

message RaftMessage {
  bytes message = 1;
}

message AllPeers {
  repeated Peer all_peers = 1;
  uint64 first_peer_id = 2;
}

message Peer {
  string uri = 1;
  uint64 id = 2;
}

message AddPeerToKnownMessage {
  optional string uri = 1;
  optional uint32 port = 2;
  uint64 id = 3;
}

message PeerId {
  uint64 id = 1;
}

message Uri {
  string uri = 1;
}
